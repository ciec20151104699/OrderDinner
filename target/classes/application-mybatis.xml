<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <description>Spring-Mybatis</description>

    <context:property-placeholder location="classpath:/*.properties" />
    <!-- 数据库连接池 -->

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"

          destroy-method="close">

        <!-- 数据库驱动 -->

        <property name="driverClass" value="${jdbc.driver}" />

        <!-- 相应驱动的jdbcUrl,你懂的 -->

        <property name="jdbcUrl" value="${jdbc.url}" />

        <!-- 数据库的用户名 -->

        <property name="username" value="${jdbc.username}" />

        <!-- 数据库的密码 -->

        <property name="password" value="${jdbc.password}" />

        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->

        <!--<property name="idleConnectionTestPeriod" value="${aliLibrary.db.idleConnectionTestPeriod}" />-->

        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->

        <!--<property name="idleMaxAge" value="${aliLibrary.db.idleMaxAge}" />-->

        <!-- 每个分区最大的连接数 -->

        <!--<property name="maxConnectionsPerPartition" value="${aliLibrary.db.maxConnectionsPerPartition}" />-->

        <!-- 每个分区最小的连接数 -->

        <!--<property name="minConnectionsPerPartition" value="${aliLibrary.db.minConnectionsPerPartition}" />-->

        <!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定-->

        <!--<property name="partitionCount" value="${aliLibrary.db.partitionCount}" />-->

        <!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->

        <!--<property name="acquireIncrement" value="${aliLibrary.db.acquireIncrement}" />-->

        <!-- 缓存prepared statements的大小，默认值：0 -->

        <!--<property name="statementsCacheSize" value="${aliLibrary.db.statementsCacheSize}" />-->

        <!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->

        <!--<property name="releaseHelperThreads" value="${aliLibrary.db.releaseHelperThreads}" />-->

    </bean>

    <!-- spring-MyBatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- scan xml file -->
        <!--<property name="mapperLocations" value="classpath:cc/gukeer/smartRing/persistence/mapping/*.xml,-->
        <!--classpath:cc/gukeer/attendance/persistence/mapping/*.xml"></property>-->

        <property name="mapperLocations">
            <list>
                <value>classpath:cc/entity/mapper/*.xml</value>

            </list>
        </property>

        <property name="typeAliasesPackage" value="cc.entity.model"/>

        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>

    <!--create an sqlSession Object-->
    <bean id="sqlSessionTemple" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!-- mysql mapping scan -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cc.entity.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <context:component-scan base-package="cc.entity.*"/>



</beans>